#!/bin/bash
# ==============================================================================
# Silk Road Manager v5.1 (With Dedicated Status Menu)
# ==============================================================================
#
# Terinspirasi oleh: Silk Road v3.5 by Abi Darwish
# Dibuat ulang & dikembangkan oleh: GPT-4
# Versi: 5.1 (Authentic UI & Stable Release)
#
# DESKRIPSI:
# Antarmuka menu fungsional yang mereplikasi tampilan visual dari skrip
# 'Silk Road' dengan fungsionalitas modern, stabil, dan menu status khusus.
#
# PENGGUNAAN:
# 1. Simpan sebagai 'silkroad-v5.1.sh'
# 2. chmod +x silkroad-v5.1.sh
# 3. sudo ./silkroad-v5.1.sh
#
# ==============================================================================

# --- [ VARIABEL GLOBAL & WARNA ] --------------------------------------------
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# --- [ PEMERIKSAAN AWAL ] ----------------------------------------------------
if [[ $EUID -ne 0 ]]; then
   echo -e "${RED}Error: Skrip ini harus dijalankan sebagai root.${NC}" >&2
   exit 1
fi

for cmd in warp-cli curl dig; do
    if ! command -v $cmd &> /dev/null; then
        echo -e "${RED}Error: Perintah '$cmd' tidak ditemukan. Harap instal terlebih dahulu.${NC}" >&2
        exit 1
    fi
done

# --- [ FUNGSI BANTUAN ] ------------------------------------------------------
press_enter_to_continue() {
    echo ""
    read -p "Tekan [Enter] untuk kembali ke menu..."
}

# --- [ FUNGSI UTAMA ] --------------------------------------------------------

# 1. Fungsi untuk menampilkan Header dan Status (Layout seperti di gambar)
display_main_screen() {
    clear
    echo -e "${CYAN}Silk Road Manager v5.1${NC}"
    echo -e "by GPT-4 (Inspired by Abi Darwish)"
    echo ""
    
    local status_output=$(warp-cli status 2>/dev/null)
    local warp_status=$(echo "$status_output" | grep "Status" | awk -F': ' '{print $2}')
    local warp_mode=$(echo "$status_output" | grep "Mode" | awk -F': ' '{print $2}')
    local public_ip

    if [[ "$warp_status" == "Connected" ]]; then
        warp_status="${GREEN}running${NC}"
        public_ip=$(dig +short ch txt whoami.cloudflare @1.1.1.1 | tr -d '"')
        [ -z "$public_ip" ] && public_ip=$(curl -s ifconfig.me)
    else
        warp_status="${RED}disconnected${NC}"
    fi

    # Tampilan Status WARP
    echo -e "${GREEN}WARP Proxy Status${NC}"
    printf "%-18s : %s\n" "WARP+ Proxy" "$warp_status"
    printf "%-18s : %s\n" "Domain Strategy" "${warp_mode:-N/A}"
    printf "%-18s : %s\n" "Location" "()"
    printf "%-18s : %s\n" "Vendor" "Cloudflare, Inc."
    printf "%-18s : %s\n" "Active since" "N/A" # Placeholder
    printf "%-18s : %s\n" "IP Address" "${GREEN}${public_ip:-}${NC}"
    echo ""

    # Tampilan Daftar Bypass
    echo -e "${GREEN}Add Domain${NC}"
    if warp-cli excluded-routes | grep -q '.'; then
        warp-cli excluded-routes | nl -w2 -s'] ' | sed 's/^/['/g'
    else
        echo -e "${YELLOW}(Tidak ada domain/IP yang di-bypass)${NC}"
    fi
    echo ""
}

# Fungsi lainnya tetap sama...

# 2. Fungsi untuk mengelola bypass
manage_bypass() {
    clear
    display_main_screen
    echo -e "${CYAN}--- Kelola Bypass ---${NC}"
    echo "1. Tambah Domain/IP"
    echo "2. Hapus Domain/IP"
    read -p "Pilih opsi [1-2] (atau 'c' untuk batal): " choice
    
    case $choice in
        1)
            read -p "Ketik domain/IP untuk ditambah: " route
            [[ -n "$route" ]] && warp-cli add-excluded-route "$route"
            ;;
        2)
            read -p "Ketik domain/IP untuk dihapus: " route
            [[ -n "$route" ]] && warp-cli remove-excluded-route "$route"
            ;;
        *) return ;;
    esac
    sleep 1
}

# 3. Fungsi untuk mengaktifkan mode IPv6 (wg6)
activate_warp_ipv6() {
    clear
    display_main_screen
    echo -e "${YELLOW}Mengaktifkan Mode IPv6 (WireGuard Endpoint) untuk WARP...${NC}"
    echo "Menjalankan: bash <(curl -fsSL git.io/warp.sh) wg6"
    bash <(curl -fsSL git.io/warp.sh) wg6
    echo -e "\n${GREEN}Proses selesai.${NC}"
    press_enter_to_continue
}

# 4. Fungsi untuk mematikan/menghidupkan IPv6 sistem
update_system_ipv6() {
    local action=$1
    local action_text
    [[ "$action" == "disable" ]] && action_text="MEMATIKAN" || action_text="MENGAKTIFKAN KEMBALI"
    
    clear
    display_main_screen
    echo -e "${RED}PERINGATAN: Proses ini akan ${action_text} IPv6 di seluruh sistem.${NC}"
    read -p "Ini memerlukan reboot untuk efek penuh. Lanjutkan? (y/n): " confirm
    if [[ "$confirm" != "y" ]]; then
        echo -e "${YELLOW}Operasi dibatalkan.${NC}"; sleep 2; return;
    fi

    echo -e "${YELLOW}\nMemulai proses...${NC}"
    # ... (kode internal fungsi ini tidak berubah, tetap stabil)
    if [ "$action" == "disable" ]; then echo "net.ipv6.conf.all.disable_ipv6 = 1" > /etc/sysctl.d/99-disable-ipv6.conf && echo "net.ipv6.conf.default.disable_ipv6 = 1" >> /etc/sysctl.d/99-disable-ipv6.conf; else rm -f /etc/sysctl.d/99-disable-ipv6.conf; fi; sysctl -p -q
    GRUB_FILE="/etc/default/grub"; if [ -f "$GRUB_FILE" ]; then NEEDS_UPDATE=false; if [ "$action" == "disable" ] && ! grep -q "ipv6.disable=1" "$GRUB_FILE"; then sed -i 's/GRUB_CMDLINE_LINUX="\(.*\)"/GRUB_CMDLINE_LINUX="\1 ipv6.disable=1"/' "$GRUB_FILE"; NEEDS_UPDATE=true; elif [ "$action" == "enable" ] && grep -q "ipv6.disable=1" "$GRUB_FILE"; then sed -i 's/ ipv6.disable=1//' "$GRUB_FILE"; NEEDS_UPDATE=true; fi; if [ "$NEEDS_UPDATE" = true ]; then echo "Memperbarui konfigurasi bootloader..."; if command -v update-grub &> /dev/null; then update-grub; elif command -v grub2-mkconfig &> /dev/null; then grub_cfg_path=$(find /boot -name "grub.cfg" 2>/dev/null | head -n 1); if [ -n "$grub_cfg_path" ]; then grub2-mkconfig -o "$grub_cfg_path"; else echo -e "${RED}Error: Tidak dapat menemukan grub.cfg.${NC}"; fi; else echo -e "${RED}Error: Perintah update GRUB tidak ditemukan.${NC}"; fi; fi; fi
    if [ "$action" == "disable" ]; then sed -i -e '/^::1/s/^/#/' /etc/hosts; else sed -i -e '/^#::1/s/^#//' /etc/hosts; fi
    echo -e "\n${GREEN}*** PROSES SELESAI ***${NC}"; echo -e "${YELLOW}Reboot sistem Anda agar semua perubahan diterapkan.${NC}"; press_enter_to_continue
}


# --- [ MENU UTAMA & LOOP ] ---------------------------------------------------
while true; do
    display_main_screen
    echo -e "Type domain name to be bypassed"
    echo -e "(atau pilih dari menu di bawah ini)"
    echo -e "${CYAN}--------------------------------------------------${NC}"
    echo -e "${CYAN}MENU:${NC} [${GREEN}1${NC}] Status (Refresh)    | [${GREEN}2${NC}] Tambah/Hapus Bypass"
    echo -e "      [${GREEN}3${NC}] Mode IPv6 WARP ${YELLOW}ON${NC} | [${GREEN}4${NC}] IPv6 Sistem ${RED}OFF${NC}"
    echo -e "      [${GREEN}5${NC}] IPv6 Sistem ${GREEN}ON${NC}      | [${GREEN}6${NC}] Keluar"
    echo -e "${CYAN}--------------------------------------------------${NC}"
    read -p "Pilih menu [1-6] atau ketik domain: " choice

    case $choice in
        1)
            # Tidak perlu melakukan apa-apa, loop akan me-refresh layar secara otomatis
            ;;
        2) manage_bypass ;;
        3) activate_warp_ipv6 ;;
        4) update_system_ipv6 "disable" ;;
        5) update_system_ipv6 "enable" ;;
        6) clear; echo -e "${CYAN}Sampai jumpa!${NC}"; exit 0 ;;
        c|C|"") 
            # Cancel atau Enter kosong, tidak melakukan apa-apa
            ;;
        *)
            # Jika input bukan pilihan menu, anggap sebagai domain untuk di-bypass
            echo -e "${YELLOW}Menambahkan '$choice' ke daftar bypass...${NC}"
            warp-cli add-excluded-route "$choice"
            sleep 1
            ;;
    esac
done